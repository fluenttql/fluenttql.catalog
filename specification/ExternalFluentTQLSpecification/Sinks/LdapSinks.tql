// these are sink methods for XPath injection. The list is created based on: https://github.com/julianthome/joanaudit/blob/master/config/sinks.json


Method sink1 = new Method("javax.naming.directory.DirContext: javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)")
			.in().param(1);
			
Method sink2 = new Method("javax.naming.directory.DirContext: javax.naming.NamingEnumeration search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)")
			.in().param(1);

Method sink3 = new Method("com.novell.ldap.LDAPConnection: void connect(java.lang.String, int)")
			.in().param(0);

Method sink4 = new Method("com.novell.ldap.LDAPConnection: com.novell.ldap.LDAPSearchQueue search(java.lang.String, int, java.lang.String, java.lang.String[], boolean)")
			.in().param(2);

Method sink5 = new Method("com.novell.ldap.LDAPConnection: com.novell.ldap.LDAPSearchQueue search(java.lang.String, int, java.lang.String, java.lang.String[], boolean, com.novell.ldap.LDAPSearchConstraints)")
			.in().param(2);

Method sink6 = new Method("com.novell.ldap.LDAPConnection: com.novell.ldap.LDAPSearchQueue search(java.lang.String, int, java.lang.String, java.lang.String[], boolean, com.novell.ldap.LDAPSearchQueue, com.novell.ldap.LDAPSearchConstraints)")
			.in().param(2);

Method sink7 = new Method("com.novell.ldap.LDAPConnection: com.novell.ldap.LDAPSearchQueue search(java.lang.String, int, java.lang.String, java.lang.String[], boolean, com.novell.ldap.LDAPSearchQueue)")
			.in().param(2);
			
Method sink8 = new Method("com.unboundid.ldap.sdk.LDAPInterface: com.unboundid.ldap.sdk.SearchResult search(java.lang.String, com.unboundid.ldap.sdk.SearchScope, java.lang.String)")
			.in().param(2);
	
	
MethodSet sinksLdapinjection = new MethodSet()
								.addMethod(sink1)
								.addMethod(sink2)
								.addMethod(sink3)
								.addMethod(sink4)
								.addMethod(sink5)
								.addMethod(sink6)
								.addMethod(sink7)
								.addMethod(sink8);