import "../Sources/ServletSources.tql";

Method source4 = new Method("javax.servlet.http.HttpServletRequest: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)")
				.out().return();
/**
 * redirectTable is a simple redirection table that performs the whitelist input validation.
 */
Method sanitizer = new Method("catalog.OpenRedirect.CWE601: java.lang.String redirectTable(java.lang.String)")
				.in().param(0)
				.out().return();
				
/**
 * Sinks
 */
Method sink1 = new Method("javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)")
			.in().param(0);
			
Method sink2 = new Method("javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)")
				.in().thisObject();
				
TaintFlow tf1 = new TaintFlow()
				.from(servletSources)								//Source
				.notThrough(sanitizer)								//Sanitizer
				.to(sink1)											//Sink
				.report("Open-Redirect - CWE601!")					//Report message
				.at(3);												/*3 means report at both source and sink location.
												     		 	 	*1 means report at source location.
															 	 	*2 means report at sink location. 
		 	  													 	*/
				
TaintFlow tf2 = new TaintFlow()
				.from(source4)
				.notThrough(sanitizer)
				.to(sink2)
				.report("Open-Redirect - CWE601!")
				.at(3);
				
new TaintFlowSet()
			.addTaintFlow(tf1)
			.addTaintFlow(tf2);